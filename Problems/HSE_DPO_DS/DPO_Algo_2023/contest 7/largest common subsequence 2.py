# https://contest.yandex.ru/contest/50168/problems/Q/
# Дана последовательность, требуется найти длину её наибольшей возрастающей подпоследовательности.
# Подпоследовательностью последовательности называется некоторый набор её элементов, необязательно стоящих подряд.
# В первой строке входных данных задано число N - длина последовательности (1 ≤ N ≤ 1000). Во второй строке задается
# сама последовательность (разделитель - пробел). Элементы последовательности - целые числа, не превосходящие 10000 по
# модулю. Требуется вывести длину наибольшей строго возрастающей подпоследовательности.

def lcs(array):
    n = len(array)
    dp = [1] * n
    answer = 1

    for i in range(1, n):
        for j in range(i):
            if array[i] > array[j]:
                dp[i] = max(dp[i], dp[j] + 1)
        answer = max(answer, dp[i])

    return answer


def test0():
    test_data = ((3, 29, 5, 5, 28, 6),
                 (4, 8, 2, 6, 2, 10, 6, 29, 58, 9),
                 (1, 2, 3, 4, 5, 51, 52, 53, 54, 55, 6, 7, 8, 9, 10, 11))
    for array in test_data:
        print(lcs(array))


if __name__ == '__main__':
    tests = (test0, )
    for test in tests:
        test()
