# https://contest.yandex.ru/contest/50168/problems/I/
# В каждой клетке прямоугольной таблицы N x M записано некоторое число. Изначально игрок находится в левой верхней
# клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться
# запрещено). При проходе через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду
# берут также за первую и последнюю клетки его пути).
#
# Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.
# Вводятся два числа N и M — размеры таблицы (1 <= N <= 20, 1 <= M <= 20). Затем идет N строк по M чисел в каждой —
# размеры штрафов в килограммах за прохождение через соответствующие клетки (числа от 0 до 100).
# Выведите минимальный вес еды в килограммах, отдав которую можно попасть в правый нижний угол.

def answer(costs):
    n = len(costs)
    m = len(costs[0])
    start_cost = costs[0][0]
    dp = [[start_cost] * m for _ in range(n)]

    for i in range(1, m):
        dp[0][i] = dp[0][i - 1] + costs[0][i]

    for j in range(1, n):
        dp[j][0] = dp[j - 1][0] + costs[j][0]

    for i in range(1, n):
        for j in range(1, m):
            dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + costs[i][j]

    return dp[-1][-1]


def test0():
    test_data = ([[1, 1, 1, 1, 1],
                  [3, 100, 100, 100, 100],
                  [1, 1, 1, 1, 1],
                  [2, 2, 2, 2, 1],
                  [1, 1, 1, 1, 1]],
                 [[1, 1, 1, 1, 1],
                  [100, 100, 100, 100, 1],
                  [1, 1, 1, 1, 1],
                  [1, 100, 100, 100, 100],
                  [1, 1, 1, 1, 1]])

    for costs in test_data:
        print(answer(costs))


if __name__ == '__main__':
    tests = (test0, )
    for test in tests:
        test()
