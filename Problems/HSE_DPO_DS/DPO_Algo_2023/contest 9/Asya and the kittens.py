# https://contest.yandex.ru/contest/50346/problems/
# Ася очень любит животных. Недавно она приобрела n котят, дала им числовые идентификаторы от 1 до n
# и поселила в вольере. Вольер представляет собой ряд из n ячеек, также пронумерованных от 1 до n.
# Соседние ячейки разделены сетчатыми перегородками, всего в вольере n − 1 перегородок. Изначально в каждой ячейке
# поселился ровно один котёнок с некоторым номером.
# Наблюдая за котятами, Ася заметила, что они очень дружелюбны и некоторые пары живущих в соседних ячейках котят очень
# хотят играть друг с другом. Чтобы не лишать их этого удовольствия, Ася стала вынимать перегородки между соседними
# ячейками, делая их более крупными.
#
# В i-й день Ася делала следующее:
# ∙ Обращала внимание, что какие-то котята x_i и y_i, в i-й день живущие в соседних ячейках, хотят играть.
# ∙ Удаляла перегородку между этими ячейками, превращая их в одну, в которой оказывались все котята из двух прежних
# ячеек.
# Поскольку Ася не возвращала перегородки, через n − 1 день вольер стал единой ячейкой, в которой обитали все котята.
# Будучи очень педантичной, Ася записывала в специальный журнал идентификаторы котят x_i и y_i для каждого из n − 1
# дней.
#
# Вам в руки попал журнал с этой информацией, однако вам неизвестно, как котята были поселены в ячейки изначально.
# Найдите любое расселение котят по n исходным ячейкам, не противоречащее данным в журнале.

def answer(journal):
    n = len(journal) + 1
    color = [i for i in range(n + 1)]
    color_list = [[i] for i in range(n + 1)]
    color_list[0] = []

    def union(a, b):
        color_a, color_b = color[a], color[b]
        if len(color_list[color_a]) < len(color_list[color_b]):
            color_a, color_b = color_b, color_a

        for element in color_list[color_b]:
            color[element] = color_a

        color_list[color_a] += color_list[color_b]
        color_list[color_b] = []

    for i in range(n - 2):
        union(*journal[i])

    v1, v2 = journal[-1]
    return color_list[color[v1]] + color_list[color[v2]]


def test0():
    test_data = (((1, 4), (2, 5), (3, 1), (4, 5)), )
    for journal in test_data:
        print(*answer(journal))


if __name__ == '__main__':
    tests = (test0,)
    for test in tests:
        test()
